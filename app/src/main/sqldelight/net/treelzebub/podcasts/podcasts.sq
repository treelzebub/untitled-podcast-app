CREATE TABLE podcast (
    id TEXT PRIMARY KEY NOT NULL,
    link TEXT NOT NULL,
    title TEXT NOT NULL,
    description TEXT,
    email TEXT,
    image_url TEXT,
    last_build_date INTEGER NOT NULL,
    rss_link TEXT NOT NULL,
    last_local_update INTEGER NOT NULL,
    latest_episode_timestamp INTEGER NOT NULL
);

-- Update iff the new row's `latest_episode_timestamp` differs from the stored value.
upsert:
INSERT INTO podcast (id, link, title, description, email, image_url, last_build_date, rss_link, last_local_update, latest_episode_timestamp)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
ON CONFLICT(id) DO UPDATE SET
    link = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                THEN excluded.link ELSE podcast.link END,
    title = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                 THEN excluded.title ELSE podcast.title END,
    description = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                       THEN excluded.description ELSE podcast.description END,
    email = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                 THEN excluded.email ELSE podcast.email END,
    image_url = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                     THEN excluded.image_url ELSE podcast.image_url END,
    last_build_date = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                           THEN excluded.last_build_date ELSE podcast.last_build_date END,
    rss_link = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                    THEN excluded.rss_link ELSE podcast.rss_link END,
    last_local_update = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                             THEN excluded.last_local_update ELSE podcast.last_local_update END,
    latest_episode_timestamp = CASE WHEN podcast.latest_episode_timestamp <> excluded.latest_episode_timestamp
                                    THEN excluded.latest_episode_timestamp ELSE podcast.latest_episode_timestamp END;

delete:
DELETE FROM podcast
WHERE id = ?;

get_by_id:
SELECT * FROM podcast
WHERE id = ?;

get_by_link:
SELECT * FROM podcast
WHERE rss_link = ?;

get_all:
SELECT * FROM podcast
ORDER BY latest_episode_timestamp DESC;

get_all_rss_links:
SELECT id, rss_link FROM podcast ORDER BY latest_episode_timestamp DESC;

delete_all:
DELETE FROM podcast;
