import com.prof18.rssparser.model.ItunesItemData;

CREATE TABLE episode (
    id TEXT PRIMARY KEY NOT NULL,
    channel_id TEXT NOT NULL,
    title TEXT NOT NULL,
    author TEXT NOT NULL,
    link TEXT NOT NULL,
    pubDate TEXT,
    description TEXT,
    content TEXT,
    image TEXT,
    audio TEXT,
    source_name TEXT,
    itunes_item_data TEXT AS ItunesItemData,
    comments_url TEXT,

  FOREIGN KEY (channel_id)
    REFERENCES channel(link)
    ON DELETE CASCADE
);

insert:
INSERT OR REPLACE INTO episode(
    id, channel_id, title, author, link, pubDate, description, content,
    image, audio, source_name, itunes_item_data, comments_url)
VALUES (
    :id, :channel_id, :title, :author, :link, :pubDate, :description, :content,
    :image, :audio, :source_name, :itunes_item_data, :comments_url);

get_all_episodes:
SELECT * FROM episode;

get_episode:
SELECT *
FROM episode
WHERE id = :id;

get_episodes_by_channel_id:
SELECT *
FROM episode
WHERE channel_id = :channelId;

search_titles:
SELECT *
FROM episode
WHERE title LIKE (:term || '%');